{"version":3,"sources":["components/Button.js","components/Join.js","components/Users.js","components/Navbar.js","components/SidebarSection.js","components/Popup.js","components/Game.js","App.js","index.js","img/trophie.svg"],"names":["Button","onClick","text","className","icon","submit","disabled","options","type","Join","useState","name","setName","channel","setChannel","spymaster","setSpymaster","handleSubmit","e","game","sessionStorage","setItem","JSON","stringify","preventDefault","onSubmit","id","placeholder","class","onChange","target","value","htmlFor","checked","onColor","offColor","activeBoxShadow","to","Users","users","me","map","i","key","charAt","toUpperCase","slice","faUserSecret","Navbar","active","onMenuClick","faBars","SidebarSection","title","children","variant","scroll","Fragment","socket","Popup","handleClose","show","setShow","useEffect","handleHide","setTimeout","switchProps","boxShadow","Game","location","useParams","puzzle","setPuzzle","user","setUser","setUsers","error","setError","loading","setLoading","showSidebar","setShowSidebar","spymasterView","setSpymasterView","showPopup","setShowPopup","parse","getItem","io","emit","response","off","search","on","newGame","currentTurn","href","winner","src","Trophie","alt","black","stroke","strokeOpacity","points","xmlns","x1","x2","y1","y2","offset","stopColor","x","y","red","blue","words","color","selected","word","App","document","basename","path","exact","component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d3f15cfd.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\n\nconst Button = ({onClick, text, className, icon, submit, disabled}) => {\n\n\tconst options = submit ? {type:'submit'} : {}\n\n\treturn (\n\n\t\t<div className={`button-outer ${className || ''} ${text ? '' : 'empty' } ${!text && icon ? 'icon-only' : ''} ${disabled ? 'disabled' : ''}`}>\n\t\t\t<button {...options} className={`button-inner`} onClick={disabled ? null : onClick}>\n\t\t\t\t{text} {icon && <FontAwesomeIcon icon={icon} />}\n\t\t\t</button>\n\t\t</div>\n\n\t\t)\n}\n\nexport default Button","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom'\nimport Switch from \"react-switch\";\n\nimport Button from './Button'\nimport '../css/Forms.css';\n\nconst Join = () => {\n\n    const [name, setName] = useState('')\n    const [channel, setChannel] = useState('')\n    const [spymaster, setSpymaster] = useState(false)\n\n    const handleSubmit = (e) => {\n        if (!name || !channel) {\n            e.preventDefault()\n        } else {\n\n            const game = {name, channel, spymaster}\n            sessionStorage.setItem('game', JSON.stringify(game));\n\n            return null\n        }\n    }\n\n    const switchProps = {\n        onColor: '#8bc34a',\n        offColor: '#ff0000',\n        activeBoxShadow: '0 0 0px 3px #1d1d32'\n    }\n\n    return (\n\n\n        <div className=\"page-container\">\n            <div>\n                <div className=\"title\">\n                    <h4>Codenames</h4>\n                </div>\n                <div className={'form-wrapper'}>\n                    <form onSubmit={handleSubmit} className=\"form\">\n\n                        <input type=\"text\" id='name-input' placeholder=\"Your Name\" class=\"nameInput\"\n                               onChange={(e) => setName(e.target.value)}/>\n                        <input type=\"text\" id='channel-input' placeholder=\"Channel name\" class=\"channelInput\"\n                               onChange={(e) => setChannel(e.target.value)}/>\n\n                        <div className=\"form-row\">\n                            <label htmlFor='spymaster-switch'>Spymaster?</label>\n                            <Switch id='spymaster-switch' onChange={(e) => setSpymaster(e)}\n                                    checked={spymaster} {...switchProps}/>\n                        </div>\n                        <div className='space'></div>\n                        <Link onClick={handleSubmit} to={`/play/${channel}`}>\n                            <Button submit={name && channel} className=\"fullwidth\" text={'Play!'}/>\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Join\n","import React from 'react';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserSecret } from '@fortawesome/free-solid-svg-icons'\n\nconst Users = ({users, me}) => {\n\n\n\treturn (\n\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{\n\t\t\t\t\tusers.map((e,i) => {\n\t\t\t\t\treturn(\t\t\n\t\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t{e.name.charAt(0).toUpperCase() + e.name.slice(1) } \n\t\t\t\t\t\t\t{e.name === me && <span>(you)</span>}\n\t\t\t\t\t\t\t{e.spymaster && <FontAwesomeIcon icon={faUserSecret} />}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t) \n\t\t\t\t})\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\n\t\t)\n}\n\nexport default Users\n","import React from 'react';\nimport '../css/Navbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\n\n\nconst Navbar = ({active, onMenuClick}) => {\n\n\n\treturn (\n\t\t// <img src={Logo} alt=\"logo\" className=\"logo\" />\n\t\t<header>\n\t\t\t<div id=\"menu\" onClick={() => onMenuClick(!active)}>\n\t\t\t<FontAwesomeIcon icon={faBars} />\n\t\t\t</div>\n\t\t</header>\n\n\t\t)\n}\n\nexport default Navbar\n","import React from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst SidebarSection = ({title, className, children, variant, scroll}) => {\n    return (\n        <React.Fragment>\n            <div className={`sidebar-section ${variant || ''}`}>\n                <h4>{title}</h4>\n                {scroll ? <ScrollToBottom className={className}>\n                        {children}\n                    </ScrollToBottom>\n                    : <div className={className}>{children}</div>\n                }\n            </div>\n            <hr/>\n        </React.Fragment>\n    )\n}\n\nexport default SidebarSection\n","import React, {useState, useEffect} from 'react';\nimport Button from './Button'\n\nconst Popup = ({children, handleClose}) => {\n\n\tconst [show, setShow] = useState(false)\n\n\n\tuseEffect( () => {\n\t\tsetShow(true)\n\t}, [])\n\n\t// useEffect( () => {\n\t// \tif(show) {\n\t// \t\tdocument.body.className = 'modal-open';\n\t// \t\twindow.scrollTo(0, 0);\n\t// \t} \n\t// }, [show])\n\n\tconst handleHide = () => {\n\t\tsetShow(false);\n\t\tsetTimeout(function(){ \n\t\t\thandleClose(); \n\t\t\t// document.body.className = ''; \n\t\t}, 1000);\n\t\t\n\t}\n\n\treturn (\n\n\t\t<div className={`popup-wrapper ${show ? 'active' : ''}`}>\n\t\t\t <div className={'popup'}>\n\t\t\t\t<div className={'popup-inner'}>\n\t\t\t\t<Button className=\"close-btn\" onClick={handleHide} />\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={'background'} onClick={handleHide}></div>\n\t\t</div>\n\n\n\n\t\t)\n}\n\n\n\nexport default Popup","import React, {useEffect, useState} from 'react';\nimport io from 'socket.io-client';\nimport Users from './Users'\nimport Navbar from './Navbar'\nimport Button from './Button'\nimport SidebarSection from './SidebarSection'\nimport {useParams, Redirect} from 'react-router-dom'\nimport {faChevronRight} from '@fortawesome/free-solid-svg-icons'\nimport Switch from \"react-switch\";\nimport {TailSpin} from 'svg-loaders-react'\nimport '../css/Popup.css';\nimport '../css/Game.css';\nimport '../css/Sidebar.css';\nimport Trophie from '../img/trophie.svg'\nimport {getSize} from '../utils/WindowSize'\n\nimport Popup from './Popup'\n\n\nlet socket;\nconst ENDPOINT = 'https://dry-eyrie-69778.herokuapp.com/'\n\nconst switchProps = {\n    onColor: '#009688',\n    offColor: '#ff0000',\n    activeBoxShadow: '0 0 0px 3px #1d1d32',\n    boxShadow: '0 0 5px 3px #1d1d3233',\n}\n\nconst Game = ({location}) => {\n\n    let {channel} = useParams();\n    const [puzzle, setPuzzle] = useState({})\n    const [user, setUser] = useState('')\n    const [users, setUsers] = useState([]);\n    const [error, setError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [showSidebar, setShowSidebar] = useState(false)\n    const [spymasterView, setSpymasterView] =  useState(false)\n    const [showPopup, setShowPopup] = useState(true)\n    //SETUP SOCKET\n    useEffect(() => {\n\n        const game = JSON.parse(sessionStorage.getItem('game'));\n\n        if (!game) {\n            setError(true)\n            return\n        }\n\n\n        if (game) {\n\n            const {name, spymaster} = game;\n\n            socket = io(ENDPOINT);\n            socket.emit('join', {name, channel, spymaster}, (response) => {\n                if (response.error) {\n                    setError(true)\n                } else {\n                    setUser(response)\n                }\n\n            });\n\n            return () => {\n                socket.emit('disconnect');\n                socket.off();\n            }\n\n        } else {\n            setError(true)\n        }\n\n\n    }, [location.search, channel])\n\n    //HANDLING ONLINE USERS\n    useEffect(() => {\n\n        if (socket) {\n            socket.on(\"onlineUsers\", ({users}) => {\n                setUsers(users);\n            });\n        }\n\n    }, [users])\n\n\n    useEffect(() => {\n\n        if (socket) {\n            socket.on(\"getPuzzle\", (puzzle) => {\n                setPuzzle(puzzle);\n                setLoading(false)\n            });\n        }\n\n    }, [])\n\n\n    const endTurn = (e) => {\n        e.preventDefault();\n        socket.emit('endTurn')\n    }\n\n    const newGame = (e) => {\n        e.preventDefault();\n        setShowPopup(false)\n        socket.emit('newGame')\n    }\n\n    const selectWord = (word) => {\n\n        if (!puzzle.winner) {\n                socket.emit('guessWord', word);\n        }\n    }\n\n\n    if (error) {\n        return <Redirect to='/'/>\n    }\n\n\n    return (\n\n        <React.Fragment>\n\n\n\n            <div className={`container ${puzzle.currentTurn}`}>\n\n                <div id={\"sidebar\"} className={`${showSidebar ? 'show' : ''}`}>\n\n\n                    <div className=\"sidebar-content\">\n                        <h1 className=\"sidebar-section\">CODENAMES</h1>\n\n                        <SidebarSection title='Channel Name' variant='space-between'>\n                            {channel}\n                        </SidebarSection>\n\n                        <SidebarSection title='Online players' className='online-users' scroll>\n                            <Users users={users} me={user.name}/>\n                        </SidebarSection>\n\n\n                        <div>\n                            <div className={'sidebar-section'}>\n                                <Button text={'New game'} onClick={newGame} className='fullwidth outline'/>\n\n                                <a href='/'><Button className='fullwidth outline' text={'Leave Channel'}/></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className={`contents`}>\n\n                    <Navbar onMenuClick={setShowSidebar} active={showSidebar}/>\n\n                    {puzzle.winner && showPopup &&\n\n                    <Popup handleClose={() => setShowPopup(false)}>\n                        <img src={Trophie} alt='trophie' className=\"popup-image\"/>\n                        <h2 className={puzzle.winner}>{puzzle.winner && puzzle.winner.toUpperCase()} team wins!</h2>\n                        <p>{puzzle.black ? 'The assassin has been found' : 'All words found'}</p>\n                        <Button text={'New Game'} onClick={newGame}/>\n                    </Popup>\n\n                    }\n\n                    {puzzle.winner\n                    }\n\n                    {loading ?\n\n                        <TailSpin stroke=\"#FFF\" strokeOpacity=\"1\"/>\n\n                        : <div className={`gameContainer`}>\n\n                            <div className=\"top-bar\">\n                                    {puzzle.currentTurn && !puzzle.winner &&\n                                    <span className={`currentTurn ${puzzle.currentTurn}`}>\n                                         {puzzle.currentTurn.toUpperCase()} plays\n\t\t\t\t\t\t</span>\n                                    }\n\n                                <span className=\"currentTurn timer\">Timer</span>\n                                {puzzle.points && <div className=\"scores scoreBackground\">\n\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\">\n\n                                        <defs>\n                                            <linearGradient id=\"redGradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                                <stop offset=\"0\" stopColor='#FF0000'/>\n                                                <stop offset=\"100%\" stopColor=\"#990000\"/>\n                                            </linearGradient>\n                                            <linearGradient id=\"blueGradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n                                                <stop offset=\"0%\" stopColor='#009FFD'/>\n                                                <stop offset=\"100%\" stopColor='#37D5D6'/>\n                                            </linearGradient>\n                                        </defs>\n\n\n                                        <text className={`score red red-text`} x=\"20%\" y=\"94%\">{puzzle.points.red}</text>\n                                        <text className={`score neutral`} x=\"50%\" y=\"94%\">-</text>\n                                        <text className={`score blue`} x=\"80%\" y=\"94%\">{puzzle.points.blue}</text>\n                                    </svg>\n                                </div>\n                                }\n                            </div>\n\n                            <div id='game'>{puzzle.words && puzzle.words.map((e, i) => {\n                                return (\n                                    <div\n                                        key={i}\n                                        className={`card ${e.color ? e.color : 'hidden'} ${e.value === puzzle.selected ? 'selected team-' + puzzle.currentTurn : ''} ${(puzzle.winner || spymasterView) || !e.value === puzzle.selected ? puzzle.key[i] : ''}`}\n                                        onClick={e.color ? null : () => selectWord(e.value)}>\n                                        {e.value}\n                                    </div>\n                                )\n                            })}\n                            </div>\n\n                            <div className=\"bottom-bar\">\n                                <div>\n\n                                    {user.spymaster &&\n                                    <div className=\"setting\">\n                                        <label htmlFor=\"spymaster-switch\">Spymaster view</label>\n                                        <Switch id='spymaster-switch' onChange={(e) => setSpymasterView(e)}\n                                                checked={spymasterView} {...switchProps} disabled={puzzle.winner}/>\n                                    </div>\n                                    }\n\n                                </div>\n\n                                <div className=\"center\">\n                                    <Button text={'End Turn'} onClick={endTurn}\n                                            disabled={puzzle.winner}/>\n                                </div>\n                                <div></div>\n                            </div>\n                        </div>\n                    }\n\n                </div>\n\n                <div className={`close-menu ${showSidebar ? 'show' : ''}`} onClick={() => setShowSidebar(false)}></div>\n\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Game\n","import React, {useEffect} from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom'\n//import { HashRouter as Router } from 'react-router-dom'\nimport Join from './components/Join'\nimport Game from './components/Game'\nimport './css/App.css';\nimport './css/Button.css';\n\nconst App = () => {\n\n  return (\n\n      useEffect(() => {\n          document.title = 'Codenames'\n      }, []),\n\n      <Router basename={'/'}>\n        <Route path='/' exact component={Join} />\n        <Route path='/play/:channel' component={Game} />\n      </Router>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/trophie.04073341.svg\";"],"sourceRoot":""}